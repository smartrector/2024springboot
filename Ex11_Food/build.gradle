plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sample'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Querydsl dependencies
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
  	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정 - generated 폴더 설정 및 소스 디렉토리에 추가
def querydslSrcDir = file("src/main/generated")

sourceSets {
	main.java.srcDirs += querydslSrcDir
}

clean {
	delete querydslSrcDir
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = querydslSrcDir
}

